Program state id: 0
Execution stack:
for (v = 0; v < 3; v = v + 1) {fork(print(v) | v = v + 1)} | print(v * 10)
v = 20

Symbol table:

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
for (v = 0; v < 3; v = v + 1) {fork(print(v) | v = v + 1)} | print(v * 10)

Symbol table:
v = 20

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
for (v = 0; v < 3; v = v + 1) {fork(print(v) | v = v + 1)}

Symbol table:
v = 20

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
v = 0 | while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 20

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = 0

Symbol table:
v = 20

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 0

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 0

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = v + 1
fork(print(v) | v = v + 1)

Symbol table:
v = 0

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = v + 1

Symbol table:
v = 0

File table:

Heap table:

Output:

--------------------

Program state id: 1
Execution stack:
print(v) | v = v + 1

Symbol table:
v = 0

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 1

File table:

Heap table:

Output:

--------------------

Program state id: 1
Execution stack:
v = v + 1
print(v)

Symbol table:
v = 0

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 1

File table:

Heap table:

Output:
0

--------------------

Program state id: 1
Execution stack:
v = v + 1

Symbol table:
v = 0

File table:

Heap table:

Output:
0

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = v + 1
fork(print(v) | v = v + 1)

Symbol table:
v = 1

File table:

Heap table:

Output:
0

--------------------

Program state id: 1
Execution stack:

Symbol table:
v = 1

File table:

Heap table:

Output:
0

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = v + 1

Symbol table:
v = 1

File table:

Heap table:

Output:
0

--------------------

Program state id: 2
Execution stack:
print(v) | v = v + 1

Symbol table:
v = 1

File table:

Heap table:

Output:
0

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 2

File table:

Heap table:

Output:
0

--------------------

Program state id: 2
Execution stack:
v = v + 1
print(v)

Symbol table:
v = 1

File table:

Heap table:

Output:
0

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 2
Execution stack:
v = v + 1

Symbol table:
v = 1

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = v + 1
fork(print(v) | v = v + 1)

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 2
Execution stack:

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1
v = v + 1

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 3
Execution stack:
print(v) | v = v + 1

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 0
Execution stack:
print(v * 10)
while (v < 3) then fork(print(v) | v = v + 1) | v = v + 1

Symbol table:
v = 3

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 3
Execution stack:
v = v + 1
print(v)

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1

--------------------

Program state id: 0
Execution stack:
print(v * 10)

Symbol table:
v = 3

File table:

Heap table:

Output:
0
1
2

--------------------

Program state id: 3
Execution stack:
v = v + 1

Symbol table:
v = 2

File table:

Heap table:

Output:
0
1
2

--------------------

Program state id: 0
Execution stack:

Symbol table:
v = 3

File table:

Heap table:

Output:
0
1
2
30

--------------------

Program state id: 3
Execution stack:

Symbol table:
v = 3

File table:

Heap table:

Output:
0
1
2
30

--------------------

