Program state id: 0
Execution stack:
heapAllocation(v2, 30) | newLock(x) | fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)) | newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
heapAllocation(v1, 20)

Symbol table:

File table:

Heap table:

Output:

--------------------

Program state id: 0
Execution stack:
heapAllocation(v2, 30) | newLock(x) | fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)) | newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
v1 = 0

File table:

Heap table:
0 = 20

Output:

--------------------

Program state id: 0
Execution stack:
newLock(x) | fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)) | newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
heapAllocation(v2, 30)

Symbol table:
v1 = 0

File table:

Heap table:
0 = 20

Output:

--------------------

Program state id: 0
Execution stack:
newLock(x) | fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)) | newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)) | newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
newLock(x)

Symbol table:
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)) | newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
fork(fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x))

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
newLock(q) | fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)) | lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
newLock(q)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)
fork(lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x))

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)) | z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
lock(x) | heapWrite(v1, heapRead(v1) + 1) | unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
lock(x) | heapWrite(v1, heapRead(v1) - 1) | unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
fork(fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q))

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
heapWrite(v1, heapRead(v1) + 1) | unlock(x)
lock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
heapWrite(v1, heapRead(v1) - 1) | unlock(x)
lock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
z = 200 | z = 300 | z = 400 | z = 500 | lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
heapWrite(v1, heapRead(v1) + 1) | unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
heapWrite(v1, heapRead(v1) - 1) | unlock(x)
lock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 3
Execution stack:
fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)) | m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 200 | z = 300 | z = 400 | z = 500

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
unlock(x)
heapWrite(v1, heapRead(v1) + 1)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
heapWrite(v1, heapRead(v1) - 1) | unlock(x)
lock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 3
Execution stack:
m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)
fork(lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q))

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 300 | z = 400 | z = 500
z = 200

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:
unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
heapWrite(v1, heapRead(v1) - 1) | unlock(x)
lock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 3
Execution stack:
m = 100 | lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 4
Execution stack:
lock(q) | heapWrite(v2, heapRead(v2) + 5) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 300 | z = 400 | z = 500

Symbol table:
q = 1
x = 0
z = 200
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 1
Execution stack:

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
heapWrite(v1, heapRead(v1) - 1) | unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 3
Execution stack:
lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)
m = 100

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 4
Execution stack:
heapWrite(v2, heapRead(v2) + 5) | unlock(q)
lock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 400 | z = 500
z = 300

Symbol table:
q = 1
x = 0
z = 200
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
unlock(x)
heapWrite(v1, heapRead(v1) - 1)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 3
Execution stack:
lock(q) | heapWrite(v2, heapRead(v2) + 1) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 4
Execution stack:
heapWrite(v2, heapRead(v2) + 5) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 21
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 400 | z = 500

Symbol table:
q = 1
x = 0
z = 300
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 2
Execution stack:
unlock(x)

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 3
Execution stack:
heapWrite(v2, heapRead(v2) + 1) | unlock(q)
lock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 4
Execution stack:
unlock(q)
heapWrite(v2, heapRead(v2) + 5)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 30

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 500
z = 400

Symbol table:
q = 1
x = 0
z = 300
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 2
Execution stack:

Symbol table:
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 3
Execution stack:
heapWrite(v2, heapRead(v2) + 1) | unlock(q)
lock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 4
Execution stack:
unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)
z = 500

Symbol table:
q = 1
x = 0
z = 400
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 3
Execution stack:
heapWrite(v2, heapRead(v2) + 1) | unlock(q)
lock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 4
Execution stack:

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 0
Execution stack:
lock(x) | print(heapRead(v1)) | unlock(x) | lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 3
Execution stack:
heapWrite(v2, heapRead(v2) + 1) | unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 0
Execution stack:
lock(q) | print(heapRead(v2)) | unlock(q)
lock(x) | print(heapRead(v1)) | unlock(x)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 3
Execution stack:
unlock(q)
heapWrite(v2, heapRead(v2) + 1)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 35

Output:

--------------------

Program state id: 0
Execution stack:
lock(q) | print(heapRead(v2)) | unlock(q)
print(heapRead(v1)) | unlock(x)
lock(x)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:

--------------------

Program state id: 3
Execution stack:
unlock(q)

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 36

Output:

--------------------

Program state id: 0
Execution stack:
lock(q) | print(heapRead(v2)) | unlock(q)
print(heapRead(v1)) | unlock(x)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:

--------------------

Program state id: 3
Execution stack:

Symbol table:
q = 1
x = 0
v1 = 0
v2 = 1
m = 100

File table:

Heap table:
0 = 20
1 = 36

Output:

--------------------

Program state id: 0
Execution stack:
lock(q) | print(heapRead(v2)) | unlock(q)
unlock(x)
print(heapRead(v1))

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:

--------------------

Program state id: 0
Execution stack:
lock(q) | print(heapRead(v2)) | unlock(q)
unlock(x)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20

--------------------

Program state id: 0
Execution stack:
lock(q) | print(heapRead(v2)) | unlock(q)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20

--------------------

Program state id: 0
Execution stack:
print(heapRead(v2)) | unlock(q)
lock(q)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20

--------------------

Program state id: 0
Execution stack:
print(heapRead(v2)) | unlock(q)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20

--------------------

Program state id: 0
Execution stack:
unlock(q)
print(heapRead(v2))

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20

--------------------

Program state id: 0
Execution stack:
unlock(q)

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20
36

--------------------

Program state id: 0
Execution stack:

Symbol table:
q = 1
x = 0
z = 500
v1 = 0
v2 = 1

File table:

Heap table:
0 = 20
1 = 36

Output:
20
36

--------------------

